name: Sync repos from template

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

env:
  TEMPLATE_REPO: disafronov/ansible_role-template

jobs:
  prepare-template:
    runs-on: ubuntu-latest
    outputs:
      template_tag: ${{ steps.get-tag.outputs.template_tag }}
      repos_matrix: ${{ steps.repos.outputs.repos_matrix }}
    steps:
      - name: Checkout updater repository
        uses: actions/checkout@v4

      - name: Verify required lists exist and are non-empty
        id: verify
        shell: bash
        run: |
          if [[ ! -s repos.list ]]; then
            echo "repos.list not found or empty" >&2
            exit 1
          fi
          if [[ ! -s update.list ]]; then
            echo "update.list not found or empty" >&2
            exit 1
          fi
          if [[ -f delete.list ]]; then
            if [[ ! -s delete.list ]]; then
              echo "delete.list is empty; deletion step will be skipped"
            fi
          else
            echo "delete.list not found; deletion step will be skipped"
          fi

      - name: Checkout template repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TEMPLATE_REPO }}
          path: template
          fetch-depth: 0
          fetch-tags: true

      - name: Determine latest semver tag and checkout
        id: get-tag
        shell: bash
        run: |
          cd template
          LATEST_TAG=$(git tag | grep -E '^v[0-9]+(\.[0-9]+){1,2}$' | sort -V | tail -n 1)
          if [[ -z "$LATEST_TAG" ]]; then
            echo "No semver tags found matching ^vX.Y[.Z]" >&2
            exit 1
          fi
          git checkout "$LATEST_TAG"
          echo "template_tag=$LATEST_TAG" >> "$GITHUB_OUTPUT"

      - name: Remove template .git directory
        shell: bash
        run: |
          rm -rf template/.git

      - name: Upload template artifact (include hidden files)
        uses: actions/upload-artifact@v4
        with:
          name: template-bundle
          path: template
          include-hidden-files: true
          if-no-files-found: error
          retention-days: 7

      - name: Build repos matrix from repos.list
        id: repos
        shell: bash
        run: |
          mapfile -t LINES < <(grep -vE '^\s*(#|$)' repos.list)
          if [[ ${#LINES[@]} -eq 0 ]]; then
            echo "repos.list has no usable entries" >&2
            exit 1
          fi
          JSON_ARRAY=$(printf '%s\n' "${LINES[@]}" | jq -R . | jq -c -s .)
          echo "repos_matrix=$JSON_ARRAY" >> "$GITHUB_OUTPUT"

  sync-repos:
    runs-on: ubuntu-latest
    needs: prepare-template
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.prepare-template.outputs.repos_matrix) }}
    steps:
      - name: Checkout updater repository
        uses: actions/checkout@v4

      - name: Download template artifact
        uses: actions/download-artifact@v4
        with:
          name: template-bundle
          path: template

      - name: Checkout target repository (default branch)
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repo }}
          path: repo
          token: ${{ secrets.ROLE_UPDATE_TOKEN }}

      - name: Apply updates from template per update.list
        shell: bash
        run: |
          rsync -av \
            --include-from=update.list \
            --exclude='*' \
            --delete-after \
            template/ \
            repo/

      - name: Apply deletions per delete.list (if present)
        if: hashFiles('delete.list') != ''
        shell: bash
        run: |
          while IFS= read -r path || [[ -n "$path" ]]; do
            [[ -z "$path" || "$path" =~ ^\s*# ]] && continue
            rm -rfv "repo/$path" || true
          done < delete.list

      - name: Commit and push changes
        shell: bash
        env:
          TEMPLATE_TAG: ${{ needs.prepare-template.outputs.template_tag }}
        run: |
          cd repo
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git config user.name "ansible-role-updater[bot]"
          git config user.email "ansible-role-updater[bot]@users.noreply.github.com"
          git commit -m "chore: sync from template ${TEMPLATE_TAG}"
          git push origin HEAD
